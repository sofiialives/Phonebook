{"version":3,"file":"static/js/352.13aefcf9.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","../node_modules/nanoid/index.browser.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactsList/ContactList.module.css?ae34","components/ContactsList/LoadingDelete.jsx","webpack://react-homework-template/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","components/ContactsList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"inputName\":\"ContactForm_inputName__a8jFO\",\"buttonContacts\":\"ContactForm_buttonContacts__67UGg\",\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"inputLabel\":\"ContactForm_inputLabel__LEeFC\"};","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import css from './ContactForm.module.css';\nimport { nanoid } from 'nanoid';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectError, selectItems } from 'redux/contacts/selectors';\nimport { useState } from 'react';\n\nexport function ContactForm() {\n  const error = useSelector(selectError);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectItems);\n  const dispatch = useDispatch();\n\n  const id = nanoid();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const addContacts = ({ name, number }) => {\n    const isExist = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (isExist) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n    const newContact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n    dispatch(addContact(newContact));\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    addContacts({ name, number });\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      {error && 'something went wrong'}\n      <form onSubmit={handleSubmit} className={css.form}>\n        <div className={css.inputLabel}>\n          <label htmlFor={id} className={css.label}>\n            Name\n          </label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+$\"\n            minLength=\"3\"\n            maxLength=\"16\"\n            id={id}\n            value={name}\n            onChange={handleChange}\n            className={css.inputName}\n            required\n          />\n        </div>\n        <div className={css.inputLabel}>\n          <label htmlFor={id} className={css.label}>\n            Number\n          </label>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            id={id}\n            value={number}\n            onChange={handleChange}\n            className={css.inputName}\n            required\n          />\n        </div>\n        <button type=\"submit\" className={css.buttonContacts}>\n          +\n        </button>\n      </form>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__3daws\"};","import { RotatingLines } from \"react-loader-spinner\";\n\nexport const LoadingDelete = () => {\n  return (\n    <RotatingLines\n      strokeColor=\"red\"\n      strokeWidth=\"5\"\n      animationDuration=\"0.75\"\n      width=\"20px\"\n      visible={true}\n    />\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonFilter\":\"ContactItem_buttonFilter__gQjzk\",\"buttonEdit\":\"ContactItem_buttonEdit__efXia\",\"input\":\"ContactItem_input__KR5YZ\",\"buttons\":\"ContactItem_buttons__Juk+z\",\"saveBtn\":\"ContactItem_saveBtn__R6snv\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact, updateContact } from 'redux/contacts/operations';\nimport { LoadingDelete } from '../ContactsList/LoadingDelete';\nimport css from './ContactItem.module.css';\n\nexport const ContactItem = ({ name, number, id, phone }) => {\n  const [contactName, setContactName] = useState(name);\n  const [contactNumber, setContactNumber] = useState(number);\n  const [isDelete, setIsDelete] = useState(false);\n  const [isShow, setIsShow] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleDelete = id => {\n    setIsDelete(true);\n    dispatch(deleteContact(id))\n      .unwrap()\n      .then(() => setIsDelete(false));\n  };\n\n  const toggleShow = () => {\n    setIsShow(!isShow);\n  };\n\n  const updateContacts = e => {\n    e.preventDefault();\n    const form = e.target;\n    const newContact = {\n      name: contactName,\n      number: contactNumber,\n      contactId: id,\n    };\n    form.reset();\n\n    dispatch(updateContact(newContact));\n    toggleShow();\n  };\n\n  const handleChange = e => {\n    if (e.target.name === 'name') setContactName(e.target.value);\n    if (e.target.name === 'number') setContactNumber(e.target.value);\n  };\n\n  return (\n    <li>\n      {isShow ? (\n        <form onSubmit={updateContacts}>\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Change the name\"\n            value={contactName}\n            onChange={handleChange}\n          />\n          <input\n            type=\"text\"\n            name=\"number\"\n            placeholder=\"Change the number\"\n            value={contactNumber}\n            onChange={handleChange}\n          />\n          <button type=\"submit\" className={css.saveBtn}>💾</button>\n        </form>\n      ) : (\n        <>\n          <span className={css.input}>\n            {name}: {number || phone}\n          </span>\n        </>\n      )}\n      <section className={css.buttons}>\n        <button\n          type=\"button\"\n          onClick={() => toggleShow()}\n          className={css.buttonEdit}\n        >\n          {isDelete ? <LoadingDelete /> : '\\u270e'}\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => handleDelete(id)}\n          className={css.buttonFilter}\n        >\n          {isDelete ? <LoadingDelete /> : '\\u2716'}\n        </button>\n      </section>\n    </li>\n  );\n};\n","import css from './ContactList.module.css';\nimport { useSelector } from 'react-redux';\nimport { useMemo } from 'react';\nimport {\n  selectItems,\n  selectFilter,\n  selectError,\n} from 'redux/contacts/selectors';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\n\nexport const ContactsList = () => {\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectItems);\n  const filter = useSelector(selectFilter);\n\n  const filteredContacts = useMemo(() => {\n    if (filter === '') return contacts;\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }, [contacts, filter]);\n\n  return (\n    <div>\n      {error && 'something went wrong'}\n      <ul className={css.list}>\n        {filteredContacts.map(({ id, name, number, phone }) => (\n          <ContactItem key={id} id={id} name={name} number={number} phone={phone}/>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title3\":\"Filter_title3__R4TRQ\",\"input\":\"Filter_input__N7T3z\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/contactsSlice';\nimport { selectError, selectFilter } from 'redux/contacts/selectors';\nimport css from './Filter.module.css'\n\nexport const Filter = () => {\n  const error = useSelector(selectError);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { value } = e.target;\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <div>\n      {error && 'something went wrong'}\n      <h3 className={css.title3}>Find contacts by name</h3>\n      <input className={css.input}\n        type=\"filter\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"div\":\"Contacts_div__II7yi\",\"title\":\"Contacts_title__LxdN4\",\"title2\":\"Contacts_title2__hGGZj\"};","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactsList } from 'components/ContactsList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsLoggedIn } from 'redux/auth/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport css from './Contacts.module.css';\nimport { selectError } from 'redux/contacts/selectors';\n\nconst Contacts = () => {\n  const error = useSelector(selectError);\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      dispatch(fetchContacts());\n    }\n  }, [dispatch, isLoggedIn]);\n\n  return (\n    <>\n      {error && 'something went wrong'}\n      <div className={css.div}>\n        <h1 className={css.title}>Phonebook</h1>\n        <ContactForm />\n        <h2 className={css.title2}>Contacts</h2>\n        <Filter />\n        <ContactsList />\n      </div>\n    </>\n  );\n};\nexport default Contacts;\n"],"names":["nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","ContactForm","error","useSelector","selectError","useState","name","setName","number","setNumber","contacts","selectItems","dispatch","useDispatch","handleChange","e","target","value","onSubmit","evt","preventDefault","find","contact","toLowerCase","alert","newContact","addContact","addContacts","className","css","htmlFor","type","pattern","minLength","maxLength","onChange","required","LoadingDelete","strokeColor","strokeWidth","animationDuration","width","visible","ContactItem","phone","contactName","setContactName","contactNumber","setContactNumber","isDelete","setIsDelete","isShow","setIsShow","toggleShow","form","contactId","reset","updateContact","placeholder","onClick","deleteContact","unwrap","then","handleDelete","ContactsList","filter","selectFilter","filteredContacts","useMemo","includes","map","Filter","setFilter","isLoggedIn","selectIsLoggedIn","useEffect","fetchContacts"],"sourceRoot":""}